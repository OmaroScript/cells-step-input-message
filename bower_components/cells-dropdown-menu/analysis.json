{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "# cells-dropdown-menu\n\n![Certificated](https://img.shields.io/badge/certificated-yes-brightgreen.svg) ![Polymer 2.x](https://img.shields.io/badge/Polymer-2.x-green.svg)\n\n[Demo of component in Cells Catalog](https://catalogs.platform.bbva.com/cells)\n\nThis component uses `cells-dropdown-layer` to show a list of selectable items which can be checked. It works as a select component, and expects an array of items to build the list.\n\n```html\n<cells-dropdown-menu placeholder=\"Default text\" items='[...]'></cells-dropdown-layer>\n```\n\n```javascript\n[{\n'name': 'Lorem ipsum',\n'value': 'loremipsum'\n}, {\n'name': 'Lorem ipsum 2',\n'value': 'loremipsum2',\n'icon': 'coronita:creditcard'\n}]\n```\n\nThe menu can be set as required (which will show an error if no option is checked) or disabled. You can limit the amount of visible options at once with the 'maxItemsShown' property.\n\nYou can use the 'selected' property to set the currently selected item by index, as well as the 'value' property for the value of the current index.\n\n## Icons\n\nSince this component uses icons, it will need an [iconset](https://bbva.cellsjs.com/guides/best-practices/cells-icons.html) in your project as an [application level dependency](https://bbva.cellsjs.com/guides/advanced-guides/application-level-dependencies.html). In fact, this component uses an iconset in its demo.\n\n## Styling\n\nThe following custom properties and mixins are available for styling:\n\n| Custom property                                           | Description                                     | Default |\n|:----------------------------------------------------------|:------------------------------------------------|:-------:|\n| --cells-dropdown-menu-value-color                         | Text color                                      | #D0D1D4 |\n| --cells-dropdown-menu-underline-color                     | Underline color                                 | #565C67 |\n| --cells-dropdown-menu-highlighted-color                   | Highlighted color                               |  #FFF   |\n| --cells-dropdown-menu                                     | Empty mixin for component                       |   {}    |\n| --cells-dropdown-menu-haserror-layer-icon-color           | Layer icon color with error                     | #F970B5 |\n| --cells-dropdown-menu-haserror-layer-underline-color      | Layer underline color with error                | #F970B5 |\n| --cells-dropdown-menu-haserror-dark-layer-icon-color      | Layer icon color with dark class and error      | #F970B5 |\n| --cells-dropdown-menu-haserror-dark-layer-underline-color | Layer underline color with dark class and error | #F970B5 |\n| --cells-dropdown-menu-haserror                            | Empty mixin for component with error            |   {}    |\n| --cells-dropdown-menu-layer                               | Empty mixin for layer                           |   {}    |\n| --cells-dropdown-menu-lists                               | Empty mixin for list                            |   {}    |\n| --cells-dropdown-menu-item-error-value-color              | Text color for item with error                  | #F970B5 |\n| --cells-dropdown-menu-item-error-highlighted-color        | Highlighted color for item with error           | #F970B5 |\n| --cells-dropdown-menu-item-error-underline-color          | Underline color for item with error             | #F970B5 |\n| --cells-dropdown-menu-item-error                          | Empty mixin for item with error                 |   {}    |\n| --cells-dropdown-menu-item-last                           | Empty mixin for last item                       |   {}    |\n| --cells-dropdown-menu-item                                | Empty mixin for item                            |   {}    |\n| --cells-dropdown-menu-control-icon-selected               | Empty mixin for selected item icon              |   {}    |\n| --cells-dropdown-menu-control-icon                        | Empty mixin for item icon                       |   {}    |\n| --cells-dropdown-menu-control-label-selected              | Empty mixin for selected label                  |   {}    |\n| --cells-dropdown-menu-control-label                       | Empty mixin for label                           |   {}    |\n| --cells-dropdown-menu-control-icon-check-checked          | Empty mixin for check icon when checked         |   {}    |\n| --cells-dropdown-menu-control-icon-check                  | Empty mixin for check icon                      |   {}    |\n| --cells-dropdown-menu-control                             | Empty mixin for item control block              |   {}    |\n| --cells-dropdown-menu-underline-selected                  | Empty mixin for selected underline              |   {}    |\n| --cells-dropdown-menu-underline                           | Empty mixin for underline                       |   {}    |\n| --cells-dropdown-menu-line                                | Empty mixin for line block                      |   {}    |",
      "summary": "Show a custom select component using cells-dropdown-layer",
      "path": "cells-dropdown-menu/cells-dropdown-menu.js",
      "properties": [
        {
          "name": "items",
          "type": "Array | null | undefined",
          "description": "Items to show in the layer\n[{\n  name: 'Item label',\n  value: 'some-value',\n  icon: 'iconset:iconname'\n}]",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 90,
              "column": 6
            },
            "end": {
              "line": 96,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_itemsObserver\"",
              "attributeType": "Array"
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "iconCheck",
          "type": "string | null | undefined",
          "description": "Check icon",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 101,
              "column": 6
            },
            "end": {
              "line": 104,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"coronita:checkmark\""
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "Disabled state of the component",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 109,
              "column": 6
            },
            "end": {
              "line": 112,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "maxItemsShown",
          "type": "number | null | undefined",
          "description": "Max items to show at once in the layer (sets a max Height in the layer)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 117,
              "column": 6
            },
            "end": {
              "line": 120,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_maxItemsShown\"",
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "placeholder",
          "type": "string | null | undefined",
          "description": "Text to show when no option is selected",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 125,
              "column": 6
            },
            "end": {
              "line": 128,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"\""
        },
        {
          "name": "_label",
          "type": "string | null | undefined",
          "description": "Current label text",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 133,
              "column": 6
            },
            "end": {
              "line": 136,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"\""
        },
        {
          "name": "prefix",
          "type": "string | null | undefined",
          "description": "Prefix for label",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 141,
              "column": 6
            },
            "end": {
              "line": 143,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "required",
          "type": "boolean | null | undefined",
          "description": "Required status of the component",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 148,
              "column": 6
            },
            "end": {
              "line": 151,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "requiredMsg",
          "type": "string | null | undefined",
          "description": "Message to show when no option is selected in a required dropdown",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 156,
              "column": 6
            },
            "end": {
              "line": 159,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"You must select an option\""
        },
        {
          "name": "opened",
          "type": "boolean | null | undefined",
          "description": "Opened status",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 164,
              "column": 6
            },
            "end": {
              "line": 168,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_opened\"",
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "selected",
          "type": "number | null | undefined",
          "description": "Currently selected item",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 173,
              "column": 6
            },
            "end": {
              "line": 178,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_selectedObserver\"",
              "attributeType": "Number"
            }
          },
          "defaultValue": "-1"
        },
        {
          "name": "value",
          "type": "string | null | undefined",
          "description": "Value of currently selected item",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 183,
              "column": 6
            },
            "end": {
              "line": 187,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueChange\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "controlIcon",
          "type": "string | null | undefined",
          "description": "Icon to show to the left of the layer control label",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 192,
              "column": 6
            },
            "end": {
              "line": 194,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "iconDisabled",
          "type": "string | null | undefined",
          "description": "Disabled icon besides underline",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 199,
              "column": 6
            },
            "end": {
              "line": 201,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "iconOpen",
          "type": "string | null | undefined",
          "description": "Icon to show besides underline",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 206,
              "column": 6
            },
            "end": {
              "line": 208,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "controlAsMinWidthOff",
          "type": "boolean | null | undefined",
          "description": "If true, layer can be less wide than control",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 213,
              "column": 6
            },
            "end": {
              "line": 215,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "minHeight",
          "type": "number | null | undefined",
          "description": "Min height of layer",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 220,
              "column": 6
            },
            "end": {
              "line": 222,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "openingX",
          "type": "string | null | undefined",
          "description": "Horizontal direction in which layer will open. Allowed values are 'left-to-right', 'right-to-left', 'centered' and 'auto'",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 227,
              "column": 6
            },
            "end": {
              "line": 229,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "openingY",
          "type": "string | null | undefined",
          "description": "Vertical direction in which layer will open. Allowed values are 'top-to-bottom', 'bottom-to-top' and 'auto'",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 234,
              "column": 6
            },
            "end": {
              "line": 236,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "safeMargin",
          "type": "number | null | undefined",
          "description": "Minimum distance from layer limits to viewport",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 241,
              "column": 6
            },
            "end": {
              "line": 243,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "error",
          "type": "string | null | undefined",
          "description": "Error message",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 248,
              "column": 6
            },
            "end": {
              "line": 250,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "hasError",
          "type": "boolean | null | undefined",
          "description": "Boolean used to indentify if some item has an error property",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 255,
              "column": 6
            },
            "end": {
              "line": 258,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 266,
              "column": 2
            },
            "end": {
              "line": 272,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "open",
          "description": "Open layer",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 277,
              "column": 2
            },
            "end": {
              "line": 279,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "close",
          "description": "Close layer",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 284,
              "column": 2
            },
            "end": {
              "line": 286,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_layerWidth",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 288,
              "column": 2
            },
            "end": {
              "line": 290,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_maxItemsShown",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 292,
              "column": 2
            },
            "end": {
              "line": 297,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_arrowMove",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 299,
              "column": 2
            },
            "end": {
              "line": 309,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "keyCode"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_select",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 311,
              "column": 2
            },
            "end": {
              "line": 316,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_clearSelected",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 318,
              "column": 2
            },
            "end": {
              "line": 324,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_itemClick",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 326,
              "column": 2
            },
            "end": {
              "line": 333,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "ev"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_checkItem",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 335,
              "column": 2
            },
            "end": {
              "line": 344,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_opened",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 350,
              "column": 2
            },
            "end": {
              "line": 361,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setLabel",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 363,
              "column": 2
            },
            "end": {
              "line": 365,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "placeholder"
            },
            {
              "name": "_label"
            }
          ]
        },
        {
          "name": "_restoreFocus",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 367,
              "column": 2
            },
            "end": {
              "line": 371,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_keyHandler",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 373,
              "column": 2
            },
            "end": {
              "line": 391,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_arrowPressed",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 393,
              "column": 2
            },
            "end": {
              "line": 419,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "keyCode"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_selectKeyPressed",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 421,
              "column": 2
            },
            "end": {
              "line": 439,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_selectedObserver",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 441,
              "column": 2
            },
            "end": {
              "line": 452,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_someError",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 454,
              "column": 2
            },
            "end": {
              "line": 458,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "items"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_itemsObserver",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 460,
              "column": 2
            },
            "end": {
              "line": 465,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_valueChange",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 467,
              "column": 2
            },
            "end": {
              "line": 473,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "val"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setClass",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 479,
              "column": 2
            },
            "end": {
              "line": 481,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_setErrorClass",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 483,
              "column": 2
            },
            "end": {
              "line": 485,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "error"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 75,
          "column": 0
        },
        "end": {
          "line": 486,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "Polymer.Element",
      "name": "cellsDropdownMenu",
      "attributes": [
        {
          "name": "items",
          "description": "Items to show in the layer\n[{\n  name: 'Item label',\n  value: 'some-value',\n  icon: 'iconset:iconname'\n}]",
          "sourceRange": {
            "start": {
              "line": 90,
              "column": 6
            },
            "end": {
              "line": 96,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "icon-check",
          "description": "Check icon",
          "sourceRange": {
            "start": {
              "line": 101,
              "column": 6
            },
            "end": {
              "line": 104,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "disabled",
          "description": "Disabled state of the component",
          "sourceRange": {
            "start": {
              "line": 109,
              "column": 6
            },
            "end": {
              "line": 112,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "max-items-shown",
          "description": "Max items to show at once in the layer (sets a max Height in the layer)",
          "sourceRange": {
            "start": {
              "line": 117,
              "column": 6
            },
            "end": {
              "line": 120,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "placeholder",
          "description": "Text to show when no option is selected",
          "sourceRange": {
            "start": {
              "line": 125,
              "column": 6
            },
            "end": {
              "line": 128,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "prefix",
          "description": "Prefix for label",
          "sourceRange": {
            "start": {
              "line": 141,
              "column": 6
            },
            "end": {
              "line": 143,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "required",
          "description": "Required status of the component",
          "sourceRange": {
            "start": {
              "line": 148,
              "column": 6
            },
            "end": {
              "line": 151,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "required-msg",
          "description": "Message to show when no option is selected in a required dropdown",
          "sourceRange": {
            "start": {
              "line": 156,
              "column": 6
            },
            "end": {
              "line": 159,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "opened",
          "description": "Opened status",
          "sourceRange": {
            "start": {
              "line": 164,
              "column": 6
            },
            "end": {
              "line": 168,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "selected",
          "description": "Currently selected item",
          "sourceRange": {
            "start": {
              "line": 173,
              "column": 6
            },
            "end": {
              "line": 178,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "value",
          "description": "Value of currently selected item",
          "sourceRange": {
            "start": {
              "line": 183,
              "column": 6
            },
            "end": {
              "line": 187,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "control-icon",
          "description": "Icon to show to the left of the layer control label",
          "sourceRange": {
            "start": {
              "line": 192,
              "column": 6
            },
            "end": {
              "line": 194,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "icon-disabled",
          "description": "Disabled icon besides underline",
          "sourceRange": {
            "start": {
              "line": 199,
              "column": 6
            },
            "end": {
              "line": 201,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "icon-open",
          "description": "Icon to show besides underline",
          "sourceRange": {
            "start": {
              "line": 206,
              "column": 6
            },
            "end": {
              "line": 208,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "control-as-min-width-off",
          "description": "If true, layer can be less wide than control",
          "sourceRange": {
            "start": {
              "line": 213,
              "column": 6
            },
            "end": {
              "line": 215,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "min-height",
          "description": "Min height of layer",
          "sourceRange": {
            "start": {
              "line": 220,
              "column": 6
            },
            "end": {
              "line": 222,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "opening-x",
          "description": "Horizontal direction in which layer will open. Allowed values are 'left-to-right', 'right-to-left', 'centered' and 'auto'",
          "sourceRange": {
            "start": {
              "line": 227,
              "column": 6
            },
            "end": {
              "line": 229,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "opening-y",
          "description": "Vertical direction in which layer will open. Allowed values are 'top-to-bottom', 'bottom-to-top' and 'auto'",
          "sourceRange": {
            "start": {
              "line": 234,
              "column": 6
            },
            "end": {
              "line": 236,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "safe-margin",
          "description": "Minimum distance from layer limits to viewport",
          "sourceRange": {
            "start": {
              "line": 241,
              "column": 6
            },
            "end": {
              "line": 243,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "error",
          "description": "Error message",
          "sourceRange": {
            "start": {
              "line": 248,
              "column": 6
            },
            "end": {
              "line": 250,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "has-error",
          "description": "Boolean used to indentify if some item has an error property",
          "sourceRange": {
            "start": {
              "line": 255,
              "column": 6
            },
            "end": {
              "line": 258,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "cells-dropdown-menu-user-value-changed",
          "description": "Fired when user checks a value in the layer",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "cells-dropdown-menu-value",
          "description": "Fired when value changes",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "selected-changed",
          "description": "Fired when the `selected` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "Fired when the `value` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "cells-dropdown-menu"
    }
  ]
}
